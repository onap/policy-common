{
  "comments": [
    {
      "key": {
        "uuid": "90eecab6_0d5c4a50",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/event/comm/bus/internal/SingleThreadedBusTopicSource.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-05T19:03:37Z",
      "side": 0,
      "message": "Not sure about this one, in the unlikely case that stop() synchronized block fits right between 180 before 182, before the scheduler retuns to this thread to continue online 182, I think it is ok to return false, as there would be no consumer underneath (closed in stop), the operation failed if you will.",
      "revId": "0c59da823026c29d6a7c243c74e8f858c20b8f75",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74f53447_ef86c221",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/event/comm/bus/internal/SingleThreadedBusTopicSource.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 4965
      },
      "writtenOn": "2019-02-05T19:18:01Z",
      "side": 0,
      "message": "I would disagree here as the result says only if we managed to start the thread not if it\u0027s running at the time that we return from this function.\n\nThere is no way to assign the later definition as any code that would try to use it without taking this synchronized block would have a race condition by design.\n\nI would even say that because we are throwing exceptions whenever anything goes wrong in this function the return value is redundant but I didn\u0027t wanted to change the API here as I wasn\u0027t sure about that",
      "parentUuid": "90eecab6_0d5c4a50",
      "revId": "0c59da823026c29d6a7c243c74e8f858c20b8f75",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c181e5ad_18b358b5",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/event/comm/bus/internal/SingleThreadedBusTopicSource.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-05T20:22:47Z",
      "side": 0,
      "message": "Yes, there is no much point in the return value in the method signature, but that would be a discussion independent of this one, as it\u0027s using a generic interface.\n\nNevertheless, the focus here is the scenario described in the review description.  At the point of method return, success is returned, but in reality there is no consumer object underneath, and that\u0027s very iffy to claim that it\u0027s correct, just focusing on thread creation aspect (which is pretty trivial unless jvm or os memory issues).\n\nSimpler solution is to move the \"return result\" within the synchronized block, that would be best.    Actually, you don\u0027t need a local variable.",
      "parentUuid": "74f53447_ef86c221",
      "revId": "0c59da823026c29d6a7c243c74e8f858c20b8f75",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44e7c1cf_c7790118",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/event/comm/bus/internal/SingleThreadedBusTopicSource.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 4965
      },
      "writtenOn": "2019-02-05T20:32:54Z",
      "side": 0,
      "message": "Yeah good point. I\u0027ll replace that.\n\nMy biggest concern is that using this.alive may make this function randomly return false and if someone use this value as error indicator then it may be very hard to debug what went wrong.",
      "parentUuid": "c181e5ad_18b358b5",
      "revId": "0c59da823026c29d6a7c243c74e8f858c20b8f75",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbcfe284_273a1035",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/event/comm/bus/internal/SingleThreadedBusTopicSource.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-02-05T20:56:38Z",
      "side": 0,
      "message": "personally, I like the \"return result\", because the contract says that it returns true if it was started, not if it\u0027s currently alive.  In addition, that\u0027s how \"start()\" works in a lot of the servlet code, too - if it returns successfully from start(), then you can assume that it was started, but you don\u0027t know that it\u0027s still running.",
      "parentUuid": "44e7c1cf_c7790118",
      "revId": "0c59da823026c29d6a7c243c74e8f858c20b8f75",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f071b1eb_f6ac87ec",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/event/comm/bus/internal/SingleThreadedBusTopicSource.java",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 4965
      },
      "writtenOn": "2019-02-05T21:06:43Z",
      "side": 0,
      "message": "I like your way of thinking about this and after a while of thinking I agree that it would be best to leave it as I implemented it.",
      "parentUuid": "bbcfe284_273a1035",
      "revId": "0c59da823026c29d6a7c243c74e8f858c20b8f75",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}