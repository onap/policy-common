{
  "comments": [
    {
      "key": {
        "uuid": "8c9026bd_73bb4dd7",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/common/endpoints/event/comm/bus/BusTopicFactoryTestBase.java",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 2787
      },
      "writtenOn": "2019-02-20T10:32:20Z",
      "side": 1,
      "message": "\u003e 120 characters but there\u0027s nothing you can do about it unless you shorten the property names.",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 33,
        "endChar": 121
      },
      "revId": "5aa821dee5ac862e07e53fbdef1a7072e215718d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "530c0352_6c643765",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/common/endpoints/event/comm/bus/BusTopicFactoryTestBase.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-02-21T15:43:28Z",
      "side": 1,
      "message": "since these are plain strings, I prefer assertEquals(), but this should work as it is (I haven\u0027t tried: if they don\u0027t match, does Eclipse show both strings so it\u0027s easy to see what went wrong?).  I generally only use assertSame() when I want to verify that a reference that is returned is the same reference that I expect (i.e., object \"\u003d\u003d\" comparison instead of \".equals()\" comparison)\n\nsame comment elsewhere",
      "revId": "5aa821dee5ac862e07e53fbdef1a7072e215718d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e570c78_33b78bb2",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/common/endpoints/event/comm/bus/DmaapTopicPropertyBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 2787
      },
      "writtenOn": "2019-02-20T10:32:20Z",
      "side": 1,
      "message": "same here.",
      "range": {
        "startLine": 37,
        "startChar": 1,
        "endLine": 62,
        "endChar": 126
      },
      "revId": "5aa821dee5ac862e07e53fbdef1a7072e215718d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d175fe6_477cb964",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/common/endpoints/event/comm/bus/NoopTopicPropertyBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 2787
      },
      "writtenOn": "2019-02-20T10:32:20Z",
      "side": 1,
      "message": "And again.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 28,
        "endChar": 2
      },
      "revId": "5aa821dee5ac862e07e53fbdef1a7072e215718d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dd0597c_8b2e88ac",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/common/endpoints/event/comm/bus/UebTopicPropertyBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 2787
      },
      "writtenOn": "2019-02-20T10:32:20Z",
      "side": 1,
      "message": "Ditto",
      "range": {
        "startLine": 31,
        "startChar": 1,
        "endLine": 46,
        "endChar": 126
      },
      "revId": "5aa821dee5ac862e07e53fbdef1a7072e215718d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22a729bd_d7125a11",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/common/endpoints/event/comm/bus/internal/TopicBaseTest.java",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-02-21T15:43:28Z",
      "side": 1,
      "message": "should also add test cases for passing null and \"\" for the last argument",
      "revId": "5aa821dee5ac862e07e53fbdef1a7072e215718d",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}