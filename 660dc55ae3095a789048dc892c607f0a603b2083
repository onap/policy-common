{
  "comments": [
    {
      "key": {
        "uuid": "2192d615_a0bf765c",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/http/server/RestServer.java",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 4903
      },
      "writtenOn": "2021-08-12T11:15:16Z",
      "side": 1,
      "message": "We need to populate servletPath and servletClass into the properties here for this to work. So, restServerParameters should have these details too, configured in individual components\u0027 startup config file?",
      "range": {
        "startLine": 105,
        "startChar": 25,
        "endLine": 105,
        "endChar": 44
      },
      "revId": "660dc55ae3095a789048dc892c607f0a603b2083",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b932173_a2d1bc32",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/http/server/RestServer.java",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-08-12T15:49:57Z",
      "side": 1,
      "message": "I think the easy configuration for api and pap servers is to use a \"prometheus\" boolean in the configuration.   For example with the properties configuration changes in a drools-pdp the telemetry server that is currently configured like this:\n\nhttp.server.services.CONFIG.host\u003d${envd:TELEMETRY_HOST}\nhttp.server.services.CONFIG.port\u003d9696\nhttp.server.services.CONFIG.userName\u003d${envd:TELEMETRY_USER}\nhttp.server.services.CONFIG.password\u003d${envd:TELEMETRY_PASSWORD}\nhttp.server.services.CONFIG.restPackages\u003dorg.onap.policy.drools.server.restful\nhttp.server.services.CONFIG.managed\u003dfalse\nhttp.server.services.CONFIG.swagger\u003dtrue\nhttp.server.services.CONFIG.https\u003dfalse\nhttp.server.services.CONFIG.aaf\u003d${envd:AAF:false}\nhttp.server.services.CONFIG.serialization.provider\u003dorg.onap.policy.common.gson.JacksonHandler,org.onap.policy.common.endpoints.http.server.YamlJacksonHandler\n\nI would add a property line:\n\nhttp.server.services.CONFIG.prometheus\u003dtrue\n\nto get it started attached to the telemetry server.   The approach I took here was similar to the aaf or https flag in the properties.\n\nI was thinking but didn\u0027t add it to the patch that there would be an equivalent in RestServerParameters that api, pap, etc .. would use instead.\n\nThe other option is the generic one as you said passing the servletPath and servletClass as in some of the junits which is also possible via the properties in drools, but would need some additional work for the RestServerParameters.    In the code when somebody uses the the prometheus boolean flag under the hood sets the servletpath and class.  I think it is prefereble though for our existing configuration just use the boolean to make config more clear.\n\nAjith, Ram, what are your thoughts?",
      "parentUuid": "2192d615_a0bf765c",
      "range": {
        "startLine": 105,
        "startChar": 25,
        "endLine": 105,
        "endChar": 44
      },
      "revId": "660dc55ae3095a789048dc892c607f0a603b2083",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f43fc1d6_427545ab",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/http/server/RestServer.java",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 3239
      },
      "writtenOn": "2021-08-12T16:50:43Z",
      "side": 1,
      "message": "I think we need to go with one option:\n1) Have a generic way to add \"any\" servlet (including metric) using the servletPath \u0026 servletClass in components. And the servletPath \u0026 servletClass are provided to RestServer in the constructor itself based on a config at component level to enable/disable metrics.\n2) Just have a configuration to enable/disable metrics in components. And the servletPath \u0026 servletClass are hard coded in RestServer.\n\nFrom our side, we are okay to go either way. But it\u0027s not worth doing both of them.",
      "parentUuid": "3b932173_a2d1bc32",
      "range": {
        "startLine": 105,
        "startChar": 25,
        "endLine": 105,
        "endChar": 44
      },
      "revId": "660dc55ae3095a789048dc892c607f0a603b2083",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32b69d81_cba3b542",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/http/server/RestServer.java",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-08-12T17:51:24Z",
      "side": 1,
      "message": "I want both of them, Ram, at the least when I configure from properties (drools).   For the json config (other components), I think it would be good too for the rest server parameters, but since I think it does not cover all of what the original factory/properties does I am not that strong.\n\nMy reasons are:\n\n1. Same design as AAF, allows for any type of Servlet Filters but offers the convenience to just provision a well-known configured filter like AAF with just a boolean, this is easier to read and configure for an admin, true/false vs. having to know full classname of implementation and path.\n\n2. If you choose the option to only have a boolean to enable/disable metrics, then the generic servlet functionality will go away, so loss of functionality, won\u0027t be able to configure a server endpoint with an arbitrary servlet (other than the metrics one supported by the bool).\n\n3. On the other hand, if you choose the option to only support servlet and servlet path configuration, it will support all,  but for a well-known servlet for all components, such as the prometheus one, administration is a little more cumbersome as configurator instead of a true/false needs to know some implementation details.   The idea here is the same as what we did for the AAF Cadi Filter, since it is common to all components, wanted to relieve administrators from such provisioning of provisioning the full classname of the cadi filter, instead they can rely on a boolean.   Similarly, for a person, not familiar with the code that has to provision it, it is more straightforward to provision prometheus\u003dtrue to enable it than provisioning the classname of the prometheus servlet and the servlet path.   Note that AAF and Metrics servlets would be the only servlet/filters *common across all components* and therefore is ok to give them special attention.\n\n4. The code to add prometheus boolean flag support is almost no work, just a few lines, and it reuses the generic servlet code that provides generic functionality.",
      "parentUuid": "f43fc1d6_427545ab",
      "range": {
        "startLine": 105,
        "startChar": 25,
        "endLine": 105,
        "endChar": 44
      },
      "revId": "660dc55ae3095a789048dc892c607f0a603b2083",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d5f4d0d_81d9c6d8",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/http/server/RestServer.java",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 4903
      },
      "writtenOn": "2021-08-13T09:22:27Z",
      "side": 1,
      "message": "I agree with all of your comments Jorge. It is best to just have a simple flag \"exportMetrics\" or \"prometheus\" something like that in the component config/properties file. \nThe only question was\n - Based on the flag, isn\u0027t it better for the components to pass the servletPath and servletClass when the policy-endpoints support it (probably in the RestServer constructor - similar to how we pass Aaf**Filter class today - https://github.com/onap/policy-api/blob/master/main/src/main/java/org/onap/policy/api/main/startstop/ApiActivator.java#L77 )\n(Reiterating to make sure there is no misunderstanding)\nIf I understand your comments correctly, you are of the opinion that we shouldn\u0027t go as mentioned above, but the servletPath and servletClass for prometheus should be hardcoded in the policy-common based on just the flag set by individual components (We are just adding the initial support for generic standard servlets in policy-common for future, but for prometheus, we do not intend to use it directly from individual components). If this is the case, I probably have to revert to patchset 7.",
      "parentUuid": "32b69d81_cba3b542",
      "range": {
        "startLine": 105,
        "startChar": 25,
        "endLine": 105,
        "endChar": 44
      },
      "revId": "660dc55ae3095a789048dc892c607f0a603b2083",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}