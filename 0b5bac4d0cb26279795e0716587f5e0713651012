{
  "comments": [
    {
      "key": {
        "uuid": "1a76adc5_d3bbd5c2",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/http/server/HttpServletServer.java",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-08-08T16:05:48Z",
      "side": 1,
      "message": "no longer \"static\"?  If regular member data, then this should be an abstract class instead of an interface.  Or is this still a multiple-inheritance issue?  If so, then instead of putting the factory here, perhaps add a getInstance() method to the Factory interface, similar to how its typically done within standard java code.",
      "revId": "0b5bac4d0cb26279795e0716587f5e0713651012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_536a651b",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/http/server/HttpServletServer.java",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-08-08T17:08:42Z",
      "side": 1,
      "message": "Jim, removing the \"static\" keyword has no effect, the compiler will convert it to \"public static final\" as the previous code was, so nothing has changed, it is just cleaning some sonar lint for superflous keywords in this file, nothing else has changed.",
      "parentUuid": "1a76adc5_d3bbd5c2",
      "revId": "0b5bac4d0cb26279795e0716587f5e0713651012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_93b55dcf",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/http/server/HttpServletServer.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-08-08T16:05:48Z",
      "side": 1,
      "message": "is there a reason that filterClass is a String instead of just a Class object?",
      "revId": "0b5bac4d0cb26279795e0716587f5e0713651012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_f3fb7145",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/common/endpoints/http/server/HttpServletServer.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-08-08T17:18:53Z",
      "side": 1,
      "message": "I\u0027ve been debating about the convenience of adding it or keep the interface thinner.   I decided that this method is as is is a \"for sure\" for consistency with addServlet interface and how that method is used from properties, etc .. in other repo code.\n\nThe debate in my mind is to have an additional convenience method of having another overloaded version with Class parameter in the signature (same argument would apply to addServlet).  I tend to it, but not considering it a critical decision at this stage, decided to postpone it to the future as I go through other review iterations.",
      "parentUuid": "1a76adc5_93b55dcf",
      "revId": "0b5bac4d0cb26279795e0716587f5e0713651012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_b3ddf916",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/common/endpoints/http/server/test/HttpServerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-08-08T16:05:48Z",
      "side": 1,
      "message": "use assertEquals",
      "revId": "0b5bac4d0cb26279795e0716587f5e0713651012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}